 
/** 
 *  CREATE HUFF EXERCISE
 *  
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function makeContract() payable returns(address)


 #define macro MAIN() = takes(0) returns(0) {
    0x00                        // [0]
    calldataload                // [calldata]
    0xE0                        // [224,calldata]
    shr                         // [sig]

    __FUNC_SIG(makeContract)    // [makeContract,sig]
    eq                          // [makeContract==sig]
    make_spot                   // [make_spot,makeContract==sig]
    jumpi                       // []

    0x00                        // [0]
    0x00                        // [0,0]
    revert                      // []

    make_spot:
        0x20                    // [32]
        init_spot               // [init_spot,32]
        0x01                    // [1,init_spot,32]
        add                     // [init_spot+1,32]
        0x00                    // [0,init_spot,32]
        codecopy                // []
        0x20                    // [size]
        0x00                    // [0,size]
        0x00                    // [0,0,size]
        create                  // [address]
        0x00                    // [0,address]
        mstore                  // []
        0x20                    // [32]
        0x00                    // [0,32]
        return                  // []

    init_spot:
        0x0C                    // [12]
        0x0D                    // [runtime_spot,12]
        0x00                    // [0,runtime_spot,12]
        codecopy                // []
        0x0C                    // [12]
        0x00                    // [0,12]
        return                  // []

    runtime_spot:               // []
        0xcaffe                 // [0xcaffe]
        0x00                    // [0,0xcaffe]
        mstore                  // []
        0x20                    // [32]
        0x00                    // [0,32]
        return                  // [] 
}