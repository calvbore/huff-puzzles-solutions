 /** 
 *  EMITTER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when the function `value(uint256, uint256)` is called, should
 *  emit an event named `Value(uint256 indexed, uint256)`
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function value(uint256, uint256) payable returns()
 
 #define event Value(uint256 indexed, uint256)


 #define macro MAIN() = takes(0) returns(0) {
    0x00                    // [0]
    calldataload            // [calldata]
    0xE0                    // [224,calldata]
    shr                     // [sig]

    __FUNC_SIG(value)       // [value,sig]
    eq                      // [value==sig]
    value_spot              // [value_spot,value==sig]
    jumpi                   // []

    0x00                    // [0]
    0x00                    // [0,0]
    revert                  // []

    value_spot:
        0x24                // [36]
        calldataload        // [topic2]
        0x00                // [0,topic2]
        mstore              // []

        0x04                // [4]
        calldataload        // [topic1]

        __EVENT_HASH(Value) // [value,topic1]
        0x20                // [32,value,topic1]
        0x00                // [0,32,value,topic1]
        log2                // []
        stop                // []
        
 }
